'use strict';

exports.__esModule = true;

var _path = require('path');

var _minimatch = require('minimatch');

var _webpack = require('@webpack-blocks/webpack2');

var _devServer = require('@webpack-blocks/dev-server2');

var _devServer2 = _interopRequireDefault(_devServer);

var _htmlWebpackPlugin = require('html-webpack-plugin');

var _htmlWebpackPlugin2 = _interopRequireDefault(_htmlWebpackPlugin);

var _htmlWebpackExcludeAssetsPlugin = require('html-webpack-exclude-assets-plugin');

var _htmlWebpackExcludeAssetsPlugin2 = _interopRequireDefault(_htmlWebpackExcludeAssetsPlugin);

var _scriptExtHtmlWebpackPlugin = require('script-ext-html-webpack-plugin');

var _scriptExtHtmlWebpackPlugin2 = _interopRequireDefault(_scriptExtHtmlWebpackPlugin);

var _copyWebpackPlugin = require('copy-webpack-plugin');

var _copyWebpackPlugin2 = _interopRequireDefault(_copyWebpackPlugin);

var _swPrecacheWebpackPlugin = require('sw-precache-webpack-plugin');

var _swPrecacheWebpackPlugin2 = _interopRequireDefault(_swPrecacheWebpackPlugin);

var _pushManifest = require('./push-manifest');

var _pushManifest2 = _interopRequireDefault(_pushManifest);

var _webpackBaseConfig = require('./webpack-base-config');

var _webpackBaseConfig2 = _interopRequireDefault(_webpackBaseConfig);

var _prerender = require('./prerender');

var _prerender2 = _interopRequireDefault(_prerender);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (env) {
	var _helpers = (0, _webpackBaseConfig.helpers)(env),
	    isProd = _helpers.isProd,
	    cwd = _helpers.cwd,
	    src = _helpers.src;

	var outputDir = (0, _path.resolve)(cwd, env.dest || 'build');
	return _webpack.createConfig.vanilla([(0, _webpackBaseConfig2.default)(env), (0, _webpack.entryPoint)({
		'bundle': (0, _path.resolve)(__dirname, './../entry'),
		'polyfills': (0, _path.resolve)(__dirname, './polyfills')
	}), (0, _webpack.setOutput)({
		path: outputDir,
		publicPath: '/',
		filename: '[name].js',
		chunkFilename: '[name].chunk.[chunkhash:5].js'
	}), (0, _webpack.customConfig)({
		module: {
			loaders: [{
				test: /\.jsx?$/,
				include: [(0, _minimatch.filter)(src('routes') + '/{*.js,*/index.js}'), (0, _minimatch.filter)(src('components') + '/{routes,async}/{*.js,*/index.js}')],
				loader: (0, _path.resolve)(__dirname, './async-component-loader'),
				options: {
					name(filename) {
						var relative = filename.replace(src('.'), '');
						var isRoute = filename.indexOf('/routes/') >= 0;

						return isRoute ? 'route-' + relative.replace(/(^\/(routes|components\/(routes|async))\/|(\/index)?\.js$)/g, '') : false;
					},
					formatName(filename) {
						var relative = filename.replace(src('.'), '');

						return relative.replace(/(^\/(routes|components\/(routes|async))\/|(\/index)?\.js$)/g, '');
					}
				}
			}]
		}
	}), isProd && (0, _webpack.performance)(Object.assign({
		maxAssetSize: 200 * 1000,
		maxEntrypointSize: 200 * 1000,
		hints: 'warning'
	}, env.pkg.performance || {})), (0, _webpack.addPlugins)([new _copyWebpackPlugin2.default([].concat((0, _webpackBaseConfig.exists)(src('manifest.json')) ? [{ from: 'manifest.json' }] : [{
		from: (0, _path.resolve)(__dirname, '../../resources/manifest.json'),
		to: 'manifest.json'
	}, {
		from: (0, _path.resolve)(__dirname, '../../resources/icon.png'),
		to: 'assets/icon.png'
	}], [(0, _webpackBaseConfig.exists)(src('assets')) && {
		from: 'assets',
		to: 'assets'
	}]).filter(Boolean)), new _pushManifest2.default()]), htmlPlugin(env, outputDir), isProd ? production(env) : development(env), (0, _webpack.customConfig)({
		resolveLoader: {
			alias: {
				'async': (0, _path.resolve)(__dirname, './async-component-loader')
			}
		}
	})].filter(Boolean));
};

var development = function development(config) {
	var port = process.env.PORT || config.port || 8080,
	    host = process.env.HOST || config.host || '0.0.0.0',
	    origin = `${config.https === true ? 'https' : 'http'}://${host}:${port}/`;

	return (0, _webpack.group)([(0, _webpack.addPlugins)([new _webpack.webpack.NamedModulesPlugin()]), (0, _devServer2.default)({
		port,
		host,
		inline: true,
		hot: true,
		https: config.https === true,
		compress: true,
		publicPath: '/',
		contentBase: (0, _path.resolve)(config.cwd, config.src || './src'),

		disableHostCheck: true,
		historyApiFallback: true,
		quiet: true,
		clientLogLevel: 'none',
		overlay: false,
		stats: 'minimal',
		watchOptions: {
			ignored: [(0, _path.resolve)(config.cwd, 'build'), (0, _path.resolve)(config.cwd, 'node_modules')]
		}
	}, [`webpack-dev-server/client?${origin}`, `webpack/hot/dev-server?${origin}`])]);
};

var production = function production(config) {
	return (0, _webpack.addPlugins)([new _swPrecacheWebpackPlugin2.default({
		filename: 'sw.js',
		navigateFallback: 'index.html',
		navigateFallbackWhitelist: [/^(?!\/__).*/],
		minify: true,
		stripPrefix: config.cwd,
		staticFileGlobsIgnorePatterns: [/polyfills(\..*)?\.js$/, /\.map$/, /push-manifest\.json$/]
	})]);
};

var htmlPlugin = function htmlPlugin(config, outputDir) {
	return (0, _webpack.addPlugins)([new _htmlWebpackPlugin2.default({
		filename: 'index.html',
		template: `!!ejs-loader!${config.template || (0, _path.resolve)(__dirname, '../../resources/template.html')}`,
		minify: config.production && {
			collapseWhitespace: true,
			removeScriptTypeAttributes: true,
			removeRedundantAttributes: true,
			removeStyleLinkTypeAttributes: true,
			removeComments: true
		},
		favicon: (0, _webpackBaseConfig.exists)((0, _path.resolve)(config.src, 'assets/favicon.ico')) ? 'assets/favicon.ico' : (0, _path.resolve)(__dirname, '../../resources/favicon.ico'),
		manifest: config.manifest,
		inject: true,
		compile: true,
		preload: config.preload === true,
		title: config.title || config.manifest.name || config.manifest.short_name || (config.pkg.name || '').replace(/^@[a-z]\//, '') || 'Preact App',
		excludeAssets: [/(bundle|polyfills)(\..*)?\.js$/],
		config,
		ssr(params) {
			return config.prerender ? (0, _prerender2.default)(outputDir, params) : '';
		}
	}), new _htmlWebpackExcludeAssetsPlugin2.default(), new _scriptExtHtmlWebpackPlugin2.default({
		defaultAttribute: 'defer'
	})]);
};